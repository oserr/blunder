#pragma once

#include <cstdint>

namespace blunder {

// Precomputed magic numbers for bishop attacks.
inline constexpr std::array<std::uint64_t, 64> kBishopMagics = {
  0x428c2112020a00, 0x20c20082008004, 0x400808a404908000,
  0x21204080020200, 0x44242000000100, 0xe001010840000000,
  0x284a820500800, 0x21010050020850, 0x608041082020402,
  0x40982809424200, 0xa100118490400, 0xd040044104200100,
  0x8800011040b00080, 0x4000010460044064, 0xa2408208200402,
  0xc400520086093022, 0x1820044104510224, 0x820a008092402a0,
  0xc1100802002202, 0x1008040404200a08, 0x14000210140000,
  0x5200e288010800, 0x2000419410800, 0x4008880024040289,
  0x20285020120480, 0x20816108816a801, 0x8021444002a00,
  0x1002002018008120, 0x802002020040, 0x410008009025301,
  0x41004205141004, 0x2c40920003005220, 0x4a2906412400804,
  0x228a002020204, 0x102109010020400, 0xa00800090104,
  0x40c0404040240100, 0x20801090000b000, 0x601920400120100,
  0x1004210090900, 0x508014860000808, 0x83c008404401002,
  0x153082804054800, 0x8610112011000800, 0x8081014008841,
  0x8008100282011888, 0x8061020202000040, 0x8520046002040,
  0x102200a405403000, 0x4a00820842024018, 0x3a4002108080041,
  0xb0200a42088040, 0x10000004d0440000, 0xaa00113a10890020,
  0x8008022404540000, 0x8900082184480, 0x414410448200492,
  0x1102088241041, 0x40000101082900, 0x4000001204c20880,
  0xa1a0004020024418, 0x141020214d01, 0x4005a00932148400,
  0x220361001190090,
};

// Precomputed magic numbers for rook attacks.
inline constexpr std::array<std::uint64_t, 64> kRookMagics = {
  0xa980002080104000, 0x240004210006001, 0x4100090010200040,
  0x1a0004c840102200, 0x280040002800800, 0x4a00142810020021,
  0x1480010002005080, 0x8200020224054081, 0x4002002100804a00,
  0x1802000804002, 0x100102000410c, 0x8111000810022300,
  0x1000408010010, 0x84800400800200, 0x8900290006000c,
  0x10011a2034900, 0x80014020004000, 0xaa0014000300040,
  0xa002110020044100, 0x12a0090010002100, 0x3004008080040800,
  0x40808004000200, 0x80c804009a050830, 0x20005045084,
  0x200400080008020, 0x910004040002000, 0x2030040060080061,
  0x820200220010400c, 0x50080100041100, 0x40080020080,
  0x80400018210, 0x481802080004100, 0x1880400020800080,
  0x4010002004404004, 0x8000820042001020, 0x80080801000,
  0x400200100a002004, 0x980800200800400, 0x8808223114000810,
  0x508062000401, 0x1002822040148000, 0x10002000404000,
  0x10801200220040, 0x4008008010008008, 0x80004008080,
  0x402040002008080, 0x488104112140008, 0x20404100b20004,
  0x480082880410900, 0x8054804000201280, 0x18010224a0200,
  0x440224009120200, 0x1259018468003100, 0x8204000201004040,
  0x18a4021081080400, 0xd0004084012200, 0x4042208002401901,
  0x403002010488202, 0x20300e000081141, 0x1000461500009,
  0x602002010040802, 0xc03000822840015, 0x102000b00e40802,
  0x443004c102840822,
};

constexpr std::array<int, 64> kRookShifts = {
  12, 11, 11, 11, 11, 11, 11, 12,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  12, 11, 11, 11, 11, 11, 11, 12
};

constexpr std::array<int, 64> kBishopShifts = {
  6, 5, 5, 5, 5, 5, 5, 6,
  5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5,
  6, 5, 5, 5, 5, 5, 5, 6
};

} // namespace blunder
