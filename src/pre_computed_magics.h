#pragma once

#include <cstdint>

namespace blunder {

// Precomputed magic numbers for bishop attacks.
inline constexpr std::array<std::uint64_t, 64> kBishopMagics = {
  0x8040080801004408, 0x410040840400410, 0x2201080091080144,
  0x81c2424004000900, 0x64140000120400, 0x28040308050208,
  0x8001281310000000, 0x45804c50100010, 0x808ce20414180021,
  0xc000080810a40044, 0x100041404402800, 0x8104449200000001,
  0x200410090a0002, 0x68004300c000601, 0x95108080212,
  0x900220082018080, 0x21825002022000, 0x302000084a008008,
  0x54102002404, 0x408080100410260, 0x8000080622000304,
  0x1010000082600007, 0x100a100580c0000, 0x51104014100a000,
  0x4840102022a20000, 0x64220005100020, 0x1008021020002,
  0x90004141201000, 0x8400010000600040, 0x8022020000248000,
  0x40400c000892000, 0x10004800940000, 0x24000b9021c48001,
  0xa004cd2080020001, 0x5800148020080c8, 0x1008000400080422,
  0x41064880384d0000, 0x1010820140108020, 0x1000080091032001,
  0x4800a10902060002, 0x341004800088, 0x170802000008,
  0x5010110c02064020, 0x40008002088000a0, 0x140000202200000,
  0x8228020042001002, 0x2004500400444100, 0x8412010841421404,
  0x1000082210100281, 0x340804150106041, 0x400041124000,
  0x20000010a0100, 0x8000002160110000, 0x2004180825440842,
  0x9402200802289080, 0x2841040080830000, 0x20010101200210,
  0x2021400410c40c00, 0x6000413040, 0x804080102a010480,
  0x9020801121204, 0x80450001083420c0, 0x1011000818208081,
  0xa010a544d01,
};

// Precomputed magic numbers for rook attacks.
inline constexpr std::array<std::uint64_t, 64> kRookMagics = {
  0xa80008240011022, 0x840400020001000, 0x4880200009811000,
  0x6080048008031000, 0x8200042010020008, 0x1100210024000822,
  0x410000a412004100, 0x8000c628800100, 0x20028000400081a0,
  0x8880400050002008, 0x801000200080, 0x201000820100100,
  0x4000808008000400, 0x810800200040080, 0x2082003200880704,
  0xa005000210408100, 0x5400208000400082, 0x3030044020004000,
  0x801090020004210, 0x200120042000820, 0x4140808004000800,
  0x2008002800400, 0x8100808001000200, 0xa20000810044,
  0x4080004840002004, 0x8101002100400080, 0x41200082801000a4,
  0x8001010020100, 0xa01040280080080, 0x20080040080,
  0x2021000100020004, 0x4420044600208411, 0x804005800228,
  0x40080060a01000, 0x80100080802000, 0x408201001000900,
  0x1800402800800, 0x4000040080800200, 0x2118100804020200,
  0x100004082000401, 0x90304000808000, 0x201000404000,
  0x408200220010, 0xc088201001010009, 0x80004008080,
  0xa001008020004, 0x900208040001, 0x8080005524820004,
  0xa080004c80210100, 0x1c20430222008a00, 0xe000108142042600,
  0x8008010000880, 0x100800400080080, 0x2000100420400801,
  0x2201001406000500, 0x211304084011200, 0x842011004202,
  0x13846011004009, 0x220104020000901, 0x80040900201001,
  0xc2000410082002, 0x2843002400080205, 0x108100200810804,
  0x125a2210280cc0a,
};

constexpr std::array<int, 64> kRookShifts = {
  12, 11, 11, 11, 11, 11, 11, 12,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  11, 10, 10, 10, 10, 10, 10, 11,
  12, 11, 11, 11, 11, 11, 11, 12
};

constexpr std::array<int, 64> kBishopShifts = {
  6, 5, 5, 5, 5, 5, 5, 6,
  5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 9, 9, 7, 5, 5,
  5, 5, 7, 7, 7, 7, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5,
  6, 5, 5, 5, 5, 5, 5, 6
};

} // namespace blunder
